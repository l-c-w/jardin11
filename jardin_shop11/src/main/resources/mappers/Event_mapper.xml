<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.jardin.shop11.Dao.EventDao">

	<!-- 이벤트 작성 -->
	<insert id="event_write" parameterType="com.jardin.shop11.Dto.EventDto" >
		insert 
		into event values('event'||E_SEQ.nextval,#{e_name},#{e_content},#{file1},#{file2},#{start_date},#{end_date})
		<!-- 키값 리턴 -->
		<selectKey keyProperty="e_code" resultType="String" order="AFTER">
			select 'event'||E_SEQ.currval from dual
		</selectKey>
	</insert>
	
	
	<!-- 이벤트 리스트 카운트 -->
	<select id="event_paging" resultType="com.jardin.shop11.Dto.PagingDto">
		select count(*) listCnt 
		from (select * from event
		<!-- 진행,종료에 따른 검색값 추가 --> 
		<choose>
		<when test="event_type.equals('event')">
		<![CDATA[where end_date-sysdate>0)]]>
		</when>
		<when test="event_type.equals('fin_event')">
		<![CDATA[where end_date-sysdate<0)]]>
		</when>
		</choose>
		
		<!-- 검색 옵션에 따른 검색값 추가 -->
		<if test="option!=null">
		<choose>
		<when test="option.equals('all')">
		where e_name like '%'|| #{search}||'%' or e_content like '%'|| #{search}||'%'
		</when>
		<when test="option.equals('title')">
		where e_name like '%'|| #{search}||'%'
		</when>
		<when test="option.equals('content')">
		where e_content like '%'|| #{search}||'%'
		</when>
		</choose>
		</if>
	</select>
	
	
	<!-- 진행 이벤트 리스트 -->
	<select id="event" resultType="com.jardin.shop11.Dto.EventDto">
		select *
		from
		(select row_number() over(order by 
		<!-- 진행,종료에 따른 정렬 조건 추가 --> 
		<choose>
		<when test="event_type.equals('event')">
		start_date asc, end_date asc
		</when>
		<when test="event_type.equals('fin_event')">
		end_date desc
		</when>
		</choose> 
		
		) as rnum,e_code,e_name,e_content,file1,file2,start_date,end_date
		from (select * from event
		<!-- 진행,종료에 따른 검색값 추가 --> 
		<choose>
		<when test="event_type.equals('event')">
		<![CDATA[where end_date-sysdate>0)]]>
		</when>
		<when test="event_type.equals('fin_event')">
		<![CDATA[where end_date-sysdate<0)]]>
		</when>
		</choose> 
		
	
	<!-- 검색 옵션에 따른 검색값 추가 -->
	<if test="option!=null">
		<choose>
		<when test="option.equals('all')">
		where e_name like '%'|| #{search}||'%' or e_content like '%'|| #{search}||'%'
		</when>
		<when test="option.equals('title')">
		where e_name like '%'|| #{search}||'%'
		</when>
		<when test="option.equals('content')">
		where e_content like '%'|| #{search}||'%'
		</when>
		</choose>
		</if>)
		<!-- 페이지 출력 글 수 -->
		where rnum between #{curPage}*5-4 and #{curPage}*5
	</select>
	
	
	<!-- 완료 이벤트 리스트 -->
	<select id="fin_event" resultType="com.jardin.shop11.Dto.EventDto">
		<![CDATA[select * from event where end_date-sysdate<0]]>
	</select>
	
	
	<!-- 이벤트 뷰 -->
	<select id="event_view" resultType="com.jardin.shop11.Dto.EventDto">
		select * from event where e_code=#{param1}	
	</select>
	
	
	<!-- 리플리스트 리스트카운트 -->
	<select id="reply_paging" resultType="com.jardin.shop11.Dto.PagingDto">
		select count(*) listCnt from reply where e_code=#{e_code}
	</select>
	
	
	<!-- 리플 리스트 -->
	<select id="reply_list" resultType="com.jardin.shop11.Dto.ReplyDto">
		select * 
		from
		(select row_number() over(order by r_date desc) as rnum,e_code,id,r_pw,r_content,r_number,r_date
		from (select * from reply where e_code=#{e_code}))
		where rnum between #{curPage}*10-9 and #{curPage}*10
	</select>
	
	<!-- 리플 갯수 -->
	<select id="reply_count" resultType="int">
		select count(*) 
		from reply 
		where e_code=#{param1}
	</select>
	
	
	<!-- 리플 작성 -->
	<insert id="reply" parameterType="com.jardin.shop11.Dto.ReplyDto">
		insert into 
		reply values(#{e_code},REPLY_SEQ.nextval,#{id},#{r_content},#{r_pw},sysdate)
		<selectKey keyProperty="r_number" resultType="int" order="AFTER">
			select REPLY_SEQ.currval from dual
		</selectKey>
	</insert>
	
	<!-- 리플 수정 -->
	<update id="r_update" parameterType="com.jardin.shop11.Dto.ReplyDto">
		update reply 
		set r_content=#{r_content} 
		where r_number=#{r_number}
	</update>
	
	<!-- 리플 비밀번호 확인 -->
	<select id="r_pw_ch" parameterType="com.jardin.shop11.Dto.ReplyDto" resultType="String">
		select r_pw 
		from reply 
		where r_number=#{r_number}
	</select>
	
	<!-- 리플 삭제 -->
	<delete id="r_del" parameterType="com.jardin.shop11.Dto.ReplyDto">
		delete 
		from reply 
		where r_number=#{r_number}
	</delete>
</mapper>